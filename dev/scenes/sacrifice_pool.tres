[gd_resource type="VisualShader" load_steps=12 format=3 uid="uid://divbrtdl6nbrx"]

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_03qck"]
constant = Color(1, 0, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_tj73c"]
frequency = 0.0442
fractal_type = 0

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_4lfh8"]
noise = SubResource("FastNoiseLite_tj73c")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jssya"]
texture = SubResource("NoiseTexture2D_4lfh8")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_f007x"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_x2onj"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_l6m32"]

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_t6k1i"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_yk41w"]

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_lhnsg"]
default_input_values = [1, Vector2(0.1, 0.1), 2, Vector2(0, 0)]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_yna74"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 2

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_vtx_2;



void vertex() {
// Input:3
	vec3 n_out3p0 = VERTEX;


// VectorDecompose:6
	float n_out6p0 = n_out3p0.x;
	float n_out6p1 = n_out3p0.y;
	float n_out6p2 = n_out3p0.z;


// Input:4
	float n_out4p0 = TIME;


// UVFunc:8
	vec2 n_in8p1 = vec2(0.10000, 0.10000);
	vec2 n_out8p0 = vec2(n_out4p0) * n_in8p1 + UV;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_vtx_2, n_out8p0);


// FloatOp:9
	float n_in9p1 = 0.10000;
	float n_out9p0 = n_out2p0.x * n_in9p1;


// FloatOp:5
	float n_out5p0 = n_out9p0 + n_out6p1;


// VectorCompose:7
	vec3 n_out7p0 = vec3(n_out6p0, n_out5p0, n_out6p2);


// Output:0
	VERTEX = n_out7p0;


}

void fragment() {
// ColorConstant:2
	vec4 n_out2p0 = vec4(1.000000, 0.000000, 0.000000, 1.000000);


// Output:0
	ALBEDO = vec3(n_out2p0.xyz);
	EMISSION = vec3(n_out2p0.xyz);


}
"
nodes/vertex/0/position = Vector2(760, 100)
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture_jssya")
nodes/vertex/2/position = Vector2(-200, 60)
nodes/vertex/3/node = SubResource("VisualShaderNodeInput_f007x")
nodes/vertex/3/position = Vector2(-500, 360)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_x2onj")
nodes/vertex/4/position = Vector2(-860, 280)
nodes/vertex/5/node = SubResource("VisualShaderNodeFloatOp_l6m32")
nodes/vertex/5/position = Vector2(220, 200)
nodes/vertex/6/node = SubResource("VisualShaderNodeVectorDecompose_t6k1i")
nodes/vertex/6/position = Vector2(-120, 440)
nodes/vertex/7/node = SubResource("VisualShaderNodeVectorCompose_yk41w")
nodes/vertex/7/position = Vector2(400, 300)
nodes/vertex/8/node = SubResource("VisualShaderNodeUVFunc_lhnsg")
nodes/vertex/8/position = Vector2(-500, 0)
nodes/vertex/9/node = SubResource("VisualShaderNodeFloatOp_yna74")
nodes/vertex/9/position = Vector2(0, 60)
nodes/vertex/connections = PackedInt32Array(3, 0, 6, 0, 6, 1, 5, 1, 7, 0, 0, 0, 6, 0, 7, 0, 6, 2, 7, 2, 4, 0, 8, 2, 8, 0, 2, 0, 5, 0, 7, 1, 2, 0, 9, 0, 9, 0, 5, 0)
nodes/fragment/0/position = Vector2(280, 60)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorConstant_03qck")
nodes/fragment/2/position = Vector2(-100, 100)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 5, 2, 0, 0, 0)
