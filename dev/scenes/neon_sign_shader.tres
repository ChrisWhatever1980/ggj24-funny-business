[gd_resource type="VisualShader" load_steps=8 format=3 uid="uid://dl04sy36kd7c"]

[ext_resource type="Texture2D" uid="uid://d0s1q1iy45cy2" path="res://textures/neonsign.png" id="1_see8e"]
[ext_resource type="Texture2D" uid="uid://drots0clmdloh" path="res://models/person_DW 1 Color Palette - color-hex.png" id="2_y82si"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_htdyc"]
texture = ExtResource("1_see8e")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y7uql"]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_jp0oq"]
texture = ExtResource("2_y82si")

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_gsi3p"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_7jd2b"]

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform sampler2D tex_frg_2;
uniform sampler2D tex_frg_4;



void fragment() {
// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// Input:3
	float n_out3p0 = TIME;


// UVFunc:5
	vec2 n_in5p1 = vec2(1.00000, 1.00000);
	vec2 n_out5p0 = vec2(n_out3p0) * n_in5p1 + UV;


// Texture2D:4
	vec4 n_out4p0 = texture(tex_frg_4, n_out5p0);


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out2p0.xyz) + vec3(n_out4p0.xyz);


// Output:0
	ALBEDO = n_out6p0;
	ALPHA = n_out2p0.x;
	EMISSION = vec3(n_out4p0.xyz);


}
"
graph_offset = Vector2(-417.203, -109.572)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_htdyc")
nodes/fragment/2/position = Vector2(-300, -20)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_y7uql")
nodes/fragment/3/position = Vector2(-820, 460)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_jp0oq")
nodes/fragment/4/position = Vector2(-240, 360)
nodes/fragment/5/node = SubResource("VisualShaderNodeUVFunc_gsi3p")
nodes/fragment/5/position = Vector2(-500, 360)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_7jd2b")
nodes/fragment/6/position = Vector2(20, 240)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 1, 3, 0, 5, 2, 5, 0, 4, 0, 4, 0, 6, 1, 2, 0, 6, 0, 4, 0, 0, 5, 6, 0, 0, 0)
